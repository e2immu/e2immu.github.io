<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Start on </title>
    <link>https://www.e2immu.org/docs/start/</link>
    <description>Recent content in Start on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://www.e2immu.org/docs/start/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>https://www.e2immu.org/docs/start/introduction/</link>
      <pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate>
      
      <guid>https://www.e2immu.org/docs/start/introduction/</guid>
      <description>Welcome Welcome to the e2immu documentation.
We recommend The Road to Immutability → as a first introduction to the project. This document is also available as PDF in the Concepts → section.
All downloads (sources, jars) can be found on e2immu&amp;rsquo;s GitHub page →.
The e2immu project tries to be two things at the same time:
it aspires to be educational: large software projects are easier to maintain when code is highly compartimentalised.</description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://www.e2immu.org/docs/start/concepts/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>https://www.e2immu.org/docs/start/concepts/</guid>
      <description>The best place to start reading about the immutability concepts is:
The Road to Immutability →, PDF There&amp;rsquo;s also a slide deck covering the basic concepts.
TL;DR modification: changes to the object graph of an object&amp;rsquo;s fields.
container: a type which does not make modifications to the arguments of its constructors and non-private methods. You can use it as safe storage for your objects.
final fields: all fields are effectively final (either explicitly, or only modified during the construction phase).</description>
    </item>
    
    <item>
      <title>Analyser</title>
      <link>https://www.e2immu.org/docs/start/analyser/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>https://www.e2immu.org/docs/start/analyser/</guid>
      <description>Next to promoting the use of practical immutability, the e2immu project provides a static code analyser to help enforce the proper use of these immutability concepts.
The analyser is opinionated: it warns against a number of bad practices, such as:
Assigning to a field outside the type of that field, is not allowed. Why? We believe that modification belongs to the type itself, as per the concept of a container. This may be too strong for certain situations.</description>
    </item>
    
    <item>
      <title>Build, install, run</title>
      <link>https://www.e2immu.org/docs/start/buildinstall/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>https://www.e2immu.org/docs/start/buildinstall/</guid>
      <description>Building and installing the analyser and related projects is detailed in the Installing e2immu → section of the manual.
TL;DR STEP 1: Ensure you have a JDK 16 (https://www.oracle.com/java/technologies/javase-jdk16-downloads.html) or better, and git (https://git-scm.com/download/win).
STEP 2: Clone the project(s) from GitHub, minimally e2immu-support → and e2immu →.
STEP 3: Use the Gradle wrapper and a Java JDK 16 to build and publish the jars to your local repository
./gradlew publishToMavenLocal Now the support jar, analyser, two helper jars, and the Gradle plugin are available in your local repo.</description>
    </item>
    
  </channel>
</rss>
